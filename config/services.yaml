# =====================================================================
# FinGPT Trader - External Services Configuration
# =====================================================================
# Purpose: Configuration for external APIs, data providers, and services
# This file contains connection details, credentials, and service-specific
# settings needed to interact with external systems.
#
# IMPORTANT: Sensitive values are referenced as environment variables
# =====================================================================

# =====================================================================
# API CREDENTIALS AND ENDPOINTS
# =====================================================================
api:
  # Exchange APIs
  exchange:
    # Primary exchange
    provider: "binance"
    key: ${BINANCE_API_KEY}
    secret: ${BINANCE_API_SECRET}
    testnet: true
    endpoints:
      rest: "https://testnet.binance.vision/api/"
      websocket: "wss://testnet.binance.vision/ws/"
    rate_limits:
      orders: 10          # Orders per second
      data: 20            # Market data requests per second
    timeout: 30           # Request timeout in seconds
    
    # Fallback exchange
    fallback:
      provider: "kucoin"
      key: ${KUCOIN_API_KEY}
      secret: ${KUCOIN_API_SECRET}
      passphrase: ${KUCOIN_PASSPHRASE}
      testnet: true

  # News API providers
  news:
    # Primary news provider
    provider: "cryptopanic"
    key: ${CRYPTOPANIC_API_KEY}
    endpoint: "https://cryptopanic.com/api/v1/"
    rate_limit: 60  # Requests per minute
    
    # Fallback news provider
    fallback:
      provider: "newsapi"
      key: ${NEWS_API_KEY}
      endpoint: "https://newsapi.org/v2/"
      rate_limit: 100  # Requests per day for free tier
  
  # Model and ML services
  huggingface:
    token: ${HUGGINGFACE_TOKEN}
    endpoint: "https://api-inference.huggingface.co/models/"
    rate_limit: 30  # Requests per minute
  
  # Price data providers (if not using exchange directly)
  price:
    provider: "coinmarketcap"
    key: ${CMC_API_KEY}
    endpoint: "https://pro-api.coinmarketcap.com/v1/"
    fallback:
      provider: "coingecko"
      endpoint: "https://api.coingecko.com/api/v3/"

# =====================================================================
# DATA FEEDS CONFIGURATION
# =====================================================================
data_feeds:
  # Market data feed configuration
  market:
    update_interval: 60        # Seconds between updates
    cache_size: 1000           # Maximum cache entries
    pairs: ["BTCUSDT", "ETHUSDT", "BNBUSDT"]
    cache_ttl: 300             # Cache time-to-live (seconds)
    max_retries: 3             # Maximum retry attempts
    retry_delay: 5             # Seconds between retries
    connection_timeout: 10     # Connection timeout (seconds)
    
  # News data feed configuration
  news:
    update_interval: 300       # Seconds between updates
    cache_ttl: 3600            # Cache time-to-live (seconds)
    max_cache_size: 1000       # Maximum news items to cache
    sources: ["cryptopanic", "newsapi"]
    languages: ["en"]          # Filter for English news
    relevance_threshold: 0.5   # Minimum relevance score
    batch_size: 10             # Process news in batches
    max_articles: 100          # Maximum articles to fetch per update
    filters:
      min_relevance: 0.3       # Minimum relevance to cache
      max_age_hours: 24        # Maximum news age to consider
      categories: ["BTC", "ETH", "crypto", "blockchain"]

# =====================================================================
# NOTIFICATION SERVICES
# =====================================================================
notifications:
  # Email notifications
  email:
    enabled: false
    smtp_server: "smtp.gmail.com"
    smtp_port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    from_address: "fingpt@example.com"
    to_addresses: ["user@example.com"]
    
  # Discord webhook notifications
  discord:
    enabled: false
    webhook_url: ${DISCORD_WEBHOOK}
    username: "FinGPT Trader"
    avatar_url: "https://example.com/logo.png"
    
  # Telegram notifications
  telegram:
    enabled: false
    bot_token: ${TELEGRAM_BOT_TOKEN}
    chat_id: ${TELEGRAM_CHAT_ID}
    
  # Notification levels
  alert_levels:
    trade_executed: true
    position_closed: true
    stop_loss_hit: true
    take_profit_hit: true
    error: true
    daily_summary: true